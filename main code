import React, { useState, useRef } from "react";
import {
  Box,
  Select,
  MenuItem,
  TextField,
  Button,
  Table,
  TableBody,
  TableCell,
  TableContainer,
  TableHead,
  TableRow,
  Paper,
  Grid,
} from "@mui/material";
import { styled } from "@mui/system";
import Typography from "@mui/material/Typography";
import axios from 'axios';
import { saveAs } from 'file-saver';

const TableHeader = styled(TableCell)({
  color:"#213871",
  fontWeight: "bold",
  size:"50px",
  backgroundColor: "#F5F6FA",
});

const StyledSelect = styled(Select)({
  width: "27%",
  height: "30px",
  padding: "20px",
  fontSize: "16px",
  fontWeight: "bold",
  color: "#213871",
  backgroundColor: "#F5F6FA",
});

const StyledTextField = styled(TextField)({
  width: "40%",
  height: "0px",
  padding: "0px",
  fontSize: "16px",
  fontWeight: "bold",
  marginTop: "5px"
});

const StyledButton = styled(Button)({
  backgroundColor: "#213871",
  color: "white",
  "&:hover": {
    backgroundColor: "#F9F9FZ",
  },
});

const DButton = styled(Button)({
  fontWeight: "bold",
  color: "#213871",
  backgroundColor: "#F5F6FA",
  "&:hover": {
    backgroundColor: "#F9F9FZ",
  },
});

const UpButton = styled(Button)({
  backgroundColor: "#F5F6FA",
  fontWeight: "bold",
  color: "#213871",
  "&:hover": {
    backgroundColor: "#F9F9FZ",
  },
});

const ApiProtocol = () => {
  const [apiProtocol, setApiProtocol] = useState("select");
  const [ipToWhitelist, setIpToWhitelist] = useState("");
  const [userName, setUserName] = useState("");
  const [password, setPassword] = useState("");
  const [selectedFile, setSelectedFile] = useState("Choose File");
  const [clientCertDetails, setClientCertDetails] = useState([]);
 
  // Use useRef to create a reference for the file input
  const fileInputRef = useRef(null);

  const handleApiProtocolChange = (event) => {
    setApiProtocol(event.target.value);
  };

  const handleFileChange = (event) => {
    const file=event.target.files[0];
    if (file) {
        setSelectedFile(file.name); //button text with file name
    }
  };

  const handleUploadClick = () => {
    // Call click on the current reference
    fileInputRef.current.click();
  }

  const handleSave = () => {
    console.log("Changes saved");
   
    if (selectedFile && selectedFile !== "Choose File") {
      const newCertDetails = {
        certType: "Client Cert",
        certName: selectedFile,
        certSerialNo: "1234567890", // You can change this as needed
        expiry: "2025-12-31", // You can change this as needed
      };
      setClientCertDetails((prevDetails) => [...prevDetails, newCertDetails]);
      setSelectedFile("Choose File"); // Reset to default after saving
    }
  };

  const downloadCerts = async () => {
    try {
      const response = await axios.get('http://172.18.4.95:6060/terragate/v1/terrapayCerts', {
        params: { partnerId: 10001 },
        headers: { 'Content-Type': 'application/json' },
        responseType: 'blob'
      });

      const blob = new Blob([response.data], { type: 'application/zip' });
      saveAs(blob, 'terrapay_certs_chain.zip');
    } catch (error) {
      console.error('Error downloading certificates:', error);
    }
  };

  return (
    <Box sx={{ p: 4 }}>
      <Grid container spacing={7}>
        <Grid item xs={12}>
          <Box>
            <Typography>API Protocol:</Typography>
            <StyledSelect
              value={apiProtocol}
              onChange={handleApiProtocolChange}
              style={{ marginTop: "7px" }}
            >
              <MenuItem value="item1">VPN</MenuItem>
              <MenuItem value="item2">TLS</MenuItem>
              <MenuItem value="item3">Mutual TLS</MenuItem>
              <MenuItem value="select"><em>Select</em></MenuItem>
            </StyledSelect>
          </Box>
        </Grid>

        {apiProtocol === "item1" && (
          <Grid item xs={10}>
            <Box>
              <Typography>IP to be Whitelisted:</Typography>
              <StyledTextField
                value={ipToWhitelist}
                onChange={(event) => setIpToWhitelist(event.target.value)}
                style={{ marginTop: "5px" }}
              />
              <Typography style={{ marginTop: "60px" }}>UserName:</Typography>
              <StyledTextField
                value={userName}
                onChange={(event) => setUserName(event.target.value)}
              />
              <Typography style={{ marginTop: "60px" }}>Password:</Typography>
              <StyledTextField
                type="password"
                value={password}
                onChange={(event) => setPassword(event.target.value)}
              />
              <TableContainer component={Paper} style={{ marginTop: "80px", backgroundColor: "#F5F6FA", color:"#213871" }}>
                <Table sx={{ minWidth: 600 }} aria-label="simple table">
                  <TableHead>
                    <TableRow>
                      <TableHeader>Whitelisted IP</TableHeader>
                      <TableHeader>Username</TableHeader>
                      <TableHeader>Whitelisted on</TableHeader>
                      <TableHeader>Actions</TableHeader>
                    </TableRow>
                  </TableHead>
                  <TableBody>{/* Add table rows dynamically here */}</TableBody>
                </Table>
              </TableContainer>
              <StyledButton variant="contained" onClick={handleSave} style={{ marginTop: "80px" }} >
                Save / Proceed
              </StyledButton>
            </Box>
          </Grid>
        )}

        {apiProtocol === "item2" && (
          <Grid item xs={12}>
            <Box>
              <Typography>Download TerraPay certs chain:</Typography>
              <DButton variant="contained" style={{ marginTop: "5px" }} onClick={downloadCerts}>
                Download
              </DButton>
            <Button variant="contained" style={{ marginTop: "5px", marginLeft:"30px"}}>Save</Button>
            </Box>
            <StyledButton variant="contained" onClick={handleSave} style={{ marginTop: "80px"}} >
                Proceed
            </StyledButton>
          </Grid>
        )}

        {apiProtocol === "item3" && (
          <Grid item xs={12} style={{ marginTop: "40px" }}>
            <Box>
              <Typography>Download TP clients:</Typography>
              <DButton variant="contained" style={{ marginTop: "5px" }}>Download</DButton>

              <Box display="flex" gap={2} mt={2} style={{ marginTop: "50px" }}>
                <Typography>Upload Client cert:</Typography>
                {/* Call handleUploadClick when button is clicked */}
                <UpButton variant="contained" onClick={handleUploadClick}>{selectedFile}</UpButton>

                {selectedFile !=="Choose File" && (
                  <>
                    <Button
                      variant="contained"
                      color="error"
                      onClick={() => setSelectedFile("Choose File")}
                    >
                      Remove
                    </Button>
                    <StyledButton variant="contained" onClick={handleSave}>
                      Save
                    </StyledButton>
                  </>
                )}
              </Box>

              <TableContainer component={Paper} style={{ marginTop: "40px" }}>
                <Table sx={{ minWidth: 650 }} aria-label="simple table">
                  <TableHead>
                    <TableRow>
                      <TableHeader>Cert Type</TableHeader>
                      <TableHeader>Cert Name</TableHeader>
                      <TableHeader>Cert Serial No.</TableHeader>
                      <TableHeader>Expiry</TableHeader>
                    </TableRow>
                  </TableHead>
                  <TableBody>
                    {clientCertDetails.map((cert, index) => (
                      <TableRow key={index}>
                        <TableCell>{cert.certType}</TableCell>
                        <TableCell>{cert.certName}</TableCell>
                        <TableCell>{cert.certSerialNo}</TableCell>
                        <TableCell>{cert.expiry}</TableCell>
                      </TableRow>
                    ))}
                  </TableBody>
                </Table>
              </TableContainer>

              <StyledButton variant="contained" onClick={handleSave} style={{ marginTop: "72px" }}>
                Save / Proceed
              </StyledButton>
            </Box>
          </Grid>
        )}
      </Grid>

      {/* Hidden file input */}
      {/* Use ref to link to the hidden input */}
      <input
        type="file"
        ref={fileInputRef}
        style={{ display: "none" }}
        onChange={handleFileChange}
      />
    </Box>
  );
};

export default ApiProtocol;
